C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      08/08/2025 16:56:36 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LIGHT_HANDLE
OBJECT MODULE PLACED IN .\Release\Objects\light_handle.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\light_handle.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000
                    -C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\HardWare) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\lig
                    -ht_handle.lst) OBJECT(.\Release\Objects\light_handle.obj)

line level    source

   1          // encoding UTF-8
   2          // ÁÅØÂÖâÊéßÂà∂Ê∫êÁ®ãÂ∫è
   3          #include "light_handle.h"
   4          
   5          void light_blink(u8 blink_cnt)
   6          {
   7   1          // u8 i;
   8   1          // for (i = 0; i < 3; i++)
   9   1          // {
  10   1          //     LIGHT_ON();
  11   1          //     delay_ms(161);
  12   1          //     LIGHT_OFF();
  13   1          //     delay_ms(161);
  14   1          // }
  15   1      
  16   1          light_ctl_blink_times = blink_cnt;
  17   1          flag_is_ctl_light_blink = 1; // ‰ΩøËÉΩ‰∏ªÁÅØÂÖâÈó™ÁÉÅ
  18   1      }
  19          
  20          void light_init(void)
  21          {
  22   1          /* Ê†πÊçÆÂàùÂßãÁöÑÊîæÁîµÊå°‰ΩçÊù•ËÆæÂÆöÁÅØÂÖâÂØπÂ∫îÁöÑpwmÂç†Á©∫ÊØî */
  23   1      
  24   1      #if 0
                  switch (cur_initial_discharge_gear)
                  {
                  case 1:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 1Ê°£ÔºåÂàöÂºÄÂßãÊòØ 83.67%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 8367 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 8367 / 10000);
              
                      break;
              
                  case 2:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 2Ê°£ÔºåÂàöÂºÄÂßãÊòØ 74.11%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 7411 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 7411 / 10000);
              
                      break;
              
                  case 3:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 3Ê°£ÔºåÂàöÂºÄÂßãÊòØ 64.55%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 6455 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 6455 / 10000);
              
                      break;
              
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      08/08/2025 16:56:36 PAGE 2   

                  case 4:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 4Ê°£ÔºåÂàöÂºÄÂßãÊòØ 56.98%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 5698 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 5698 / 10000);
              
                      break;
              
                  case 5:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 5Ê°£ÔºåÂàöÂºÄÂßãÊòØ 49.8%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 4980 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 4980 / 10000);
              
                      break;
                  } 
                  
                  // cur_light_pwm_duty_val = expect_light_pwm_duty_val;
              #endif
  75   1      
  76   1          // Êü•Ë°®ÔºåËé∑ÂæóÊå°‰ΩçÂØπÂ∫îÁöÑÂç†Á©∫ÊØîÂÄº
  77   1          cur_light_pwm_duty_val = light_pwm_duty_init_val_table[cur_initial_discharge_gear - 1];
  78   1      
  79   1          LIGHT_SET_PWM_DUTY(cur_light_pwm_duty_val); // Á´ãÂàªÊõ¥Êñ∞PWMÂç†Á©∫ÊØî
  80   1          LIGHT_ON();                                 // ‰ΩøËÉΩPWMËæìÂá∫
  81   1          light_blink(3);                             // ÂºÄÊú∫ÂâçÔºå‰∏ªÁÅØÈúÄË¶ÅÈó™ÁÉÅ
  82   1          light_adjust_time_cnt = 0;                  // ÁÅØÂÖâË∞ÉÊï¥Êó∂Èó¥Ê∏ÖÈõ∂
  83   1      }
  84          
  85          /**
  86           * @brief ÁÅØÂÖâÊéßÂà∂ÔºàÊîæÁîµÊéßÂà∂Ôºâ
  87           *          ËøõÂÖ•ÂâçË¶ÅÂÖàÁ°ÆËÆ§ expect_light_pwm_duty_val ÁöÑÂÄºÊòØÂê¶ÂàùÂßãÂåñËøá‰∏ÄÊ¨°Ôºå
  88           *          ËøõÂÖ•ÂâçË¶ÅÂÖàÁ°ÆËÆ§ cur_light_pwm_duty_val ÁöÑÂÄºÊòØÂê¶ÂàùÂßãÂåñËøá‰∏ÄÊ¨°Ôºå
  89           *          light_adjust_time_cntË∞ÉËäÇÁÅØÂÖâÁöÑÊó∂Èó¥ËÆ°Êó∂ÊòØÂê¶Ê≠£Á°ÆÔºåÂ¶ÇÊûúÂàáÊç¢‰∫ÜÊ®°ÂºèÊàñÊîæÁîµÈ
             -ÄüÂ∫¶ÔºåË¶ÅÂÖàÊ∏ÖÈõ∂
  90           */
  91          void light_handle(void)
  92          {
  93   1          // if (flag_is_need_to_exit_setting_mode_close_light && 0 == flag_is_in_setting_mode)
  94   1          // {
  95   1          //     LIGHT_OFF();
  96   1          //     flag_is_need_to_exit_setting_mode_close_light = 0;
  97   1          // }
  98   1      
  99   1          // Â¶ÇÊûúÊ≠£Âú®ÂÖÖÁîµÔºåÁõ¥Êé•ËøîÂõû
 100   1          if (cur_charge_phase != CUR_CHARGE_PHASE_NONE ||
 101   1              cur_led_mode == CUR_LED_MODE_OFF) /* Â¶ÇÊûúÊåáÁ§∫ÁÅØÂ∑≤ÁªèÂÖ≥Èó≠ */
 102   1          {
 103   2              return;
 104   2          }
 105   1      
 106   1          // Â¶ÇÊûúÊú™Âú®ÂÖÖÁîµ
 107   1      
 108   1          // if (flag_is_light_adjust_time_come)
 109   1          // {
 110   1          //     flag_is_light_adjust_time_come = 0;
 111   1          //     light_adjust_time_cnt++;
 112   1          // }
 113   1      
 114   1          if (1 == cur_discharge_rate) // ÊîæÁîµÈÄüÁéá1Ê°£ÔºåM1
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      08/08/2025 16:56:36 PAGE 3   

 115   1          {
 116   2              /*
 117   2                  ÈÄüÂ∫¶‰∏∫M1Ôºå
 118   2                  1200sÂêéÂèòÂåñ‰∏ÄÊ¨°Âç†Á©∫ÊØîÔºå(1200 * 1)
 119   2                  3600sÂêéÂÜçÂèòÂåñ‰∏ÄÊ¨°Ôºå    (1200 * 3)
 120   2                  7200sÂêéÂÜçÂèòÂåñ‰∏ÄÊ¨°Ôºå    (1200 * 6)
 121   2                  ...
 122   2                  ÂÅáËÆæ‰πãÂêéÊòØÔºö
 123   2                  (1200 * 9)
 124   2                  (1200 * 12)
 125   2                  (1200 * 15)
 126   2                  ...
 127   2                  ÊØèÊ¨°ÂèòÂåñÁ∫¶10%Âç†Á©∫ÊØî
 128   2              */
 129   2      
 130   2              if (light_adjust_time_cnt >= (1200 * light_ctl_phase_in_rate_1)) // Â¶ÇÊûúÂà∞‰∫ÜË∞ÉËäÇÊó∂Èó¥
 131   2              {
 132   3                  light_adjust_time_cnt = 0;
 133   3      
 134   3                  if (1 == light_ctl_phase_in_rate_1)
 135   3                  {
 136   4                      light_ctl_phase_in_rate_1 = 3;
 137   4                  }
 138   3                  else
 139   3                  {
 140   4                      light_ctl_phase_in_rate_1 += 3;
 141   4                  }
 142   3      
 143   3                  // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
 144   3                  // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 10 / 10
             -0))
 145   3                  // {
 146   3                  //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + 10%Ôºå ÂáèÂ∞ë10%Âç†Á©∫ÊØî
 147   3                  //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 10 / 100;
 148   3                  // }
 149   3                  // else
 150   3                  // {
 151   3                  //     // 4.8%Âç†Á©∫ÊØî
 152   3                  //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 153   3                  // }
 154   3                  if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 10 / 100))
 155   3                  {
 156   4                      // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + 10%Ôºå ÂáèÂ∞ë10%Âç†Á©∫ÊØî
 157   4                      cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 10 / 100;
 158   4                  }
 159   3                  else
 160   3                  {
 161   4                      // 4.8%Âç†Á©∫ÊØî
 162   4                      cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 163   4                  }
 164   3              }
 165   2          }
 166   1          else // 2 == cur_discharge_rate || 3 == cur_discharge_rate
 167   1          {
 168   2              /*
 169   2                  ‰∏ÄÂºÄÂßãÊØè40sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 170   2                  ‰ªé47%ÂºÄÂßãÔºåÊØè240sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 171   2                  ‰ªé42%ÂºÄÂßãÔºåÊØè420sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 172   2      
 173   2                  ÊöÇÂÆöÊØèÊ¨°Èôç‰Ωé 0.6%
 174   2              */
 175   2      
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      08/08/2025 16:56:36 PAGE 4   

 176   2              // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®47%‰ª•‰∏äÊó∂Ôºå‰∏çÂåÖÊã¨47%ÔºåÊØè40sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 177   2              if (cur_light_pwm_duty_val > (u32)TIMER2_FEQ * 47 / 100)
 178   2              {
 179   3                  if (light_adjust_time_cnt >= 40)
 180   3                  {
 181   4                      light_adjust_time_cnt = 0;
 182   4      
 183   4                      // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 /
             - 1000))
 184   4                      // {
 185   4                      //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 186   4                      //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 187   4                      // }
 188   4                      // else
 189   4                      // {
 190   4                      //     // 4.8%Âç†Á©∫ÊØî
 191   4                      //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 192   4                      // }
 193   4                      if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 1000)
             -)
 194   4                      {
 195   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 196   5                          cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 197   5                      }
 198   4                      else
 199   4                      {
 200   5                          // 4.8%Âç†Á©∫ÊØî
 201   5                          cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 202   5                      }
 203   4                  }
 204   3              }
 205   2              // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®42%‰ª•‰∏äÊó∂Ôºå‰∏çÂåÖÊã¨42%ÔºåÊØè240ÁßíÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 206   2              else if (cur_light_pwm_duty_val > (u32)TIMER2_FEQ * 42 / 100)
 207   2              {
 208   3                  if (light_adjust_time_cnt >= 240)
 209   3                  {
 210   4                      light_adjust_time_cnt = 0;
 211   4      
 212   4                      // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 /
             - 1000))
 213   4                      // {
 214   4                      //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 215   4                      //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 216   4                      // }
 217   4                      // else
 218   4                      // {
 219   4                      //     // 4.8%Âç†Á©∫ÊØî
 220   4                      //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 221   4                      // }
 222   4                      if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 1000)
             -)
 223   4                      {
 224   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 225   5                          cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 226   5                      }
 227   4                      else
 228   4                      {
 229   5                          // 4.8%Âç†Á©∫ÊØî
 230   5                          cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 231   5                      }
 232   4                  }
 233   3              }
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      08/08/2025 16:56:36 PAGE 5   

 234   2              else // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®42%Âèä‰ª•‰∏ãÔºåÊØè420ÁßíÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 235   2              {
 236   3                  if (light_adjust_time_cnt >= 420)
 237   3                  {
 238   4                      light_adjust_time_cnt = 0;
 239   4      
 240   4                      // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 /
             - 1000))
 241   4                      // {
 242   4                      //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 243   4                      //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 244   4                      // }
 245   4                      // else
 246   4                      // {
 247   4                      //     // 4.8%Âç†Á©∫ÊØî
 248   4                      //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 249   4                      // }
 250   4                      if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 1000)
             -)
 251   4                      {
 252   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 253   5                          cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 254   5                      }
 255   4                      else
 256   4                      {
 257   5                          // 4.8%Âç†Á©∫ÊØî
 258   5                          cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 259   5                      }
 260   4                  }
 261   3              }
 262   2          } // ÊîæÁîµÈÄüÁéáM2ÔºåÊîæÁîµÈÄüÁéáM3
 263   1      
 264   1          // // Â¶ÇÊûúÁºìÊÖ¢Ë∞ÉËäÇPWMÂç†Á©∫ÊØîÁöÑÊó∂Èó¥Âà∞Êù• -- ÈúÄË¶ÅÊîæÂà∞ÂÆöÊó∂Âô®‰∏≠Êñ≠Ë∞ÉËäÇÔºå‰∏ªÂæ™ÁéØÁö
             -ÑÊó∂Èó¥ËøáÈïø
 265   1          // if (flag_is_light_pwm_duty_val_adjust_time_come)
 266   1          // {
 267   1          //     flag_is_light_pwm_duty_val_adjust_time_come = 0;
 268   1      
 269   1          //     if (cur_light_pwm_duty_val > expect_light_pwm_duty_val)
 270   1          //     {
 271   1          //         // Â¶ÇÊûúË¶ÅË∞ÉÂ∞èÁÅØÂÖâÁöÑÂç†Á©∫ÊØî
 272   1          //         cur_light_pwm_duty_val--;
 273   1          //     }
 274   1          //     else if (cur_light_pwm_duty_val < expect_light_pwm_duty_val)
 275   1          //     {
 276   1          //         // Â¶ÇÊûúË¶ÅË∞ÉÂ§ßÁÅØÂÖâÁöÑÂç†Á©∫ÊØî
 277   1          //         cur_light_pwm_duty_val++;
 278   1          //     }
 279   1      
 280   1          //     timer2_set_pwm_duty(cur_light_pwm_duty_val);
 281   1          // }
 282   1          LIGHT_SET_PWM_DUTY(cur_light_pwm_duty_val);
 283   1      }
 284          
 285          // void light_set_pwm_duty(u16 pwm_duty_val)
 286          // {
 287          //     timer2_set_pwm_duty(pwm_duty_val);
 288          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      08/08/2025 16:56:36 PAGE 6   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
